---
import type { Prompt } from "../libs/prompts-store";

interface Props {
  prompt: Prompt;
}

const { prompt } = Astro.props;
---

<button is="prompt-button" data-prompt={prompt}>
  {prompt}
</button>

<script>
  import { type Prompt, promptEnableInfoStore } from "../libs/prompts-store";

  class PromptButton extends HTMLButtonElement {
    constructor() {
      super();

      const prompt = this.dataset.prompt as Prompt;
      if (!prompt) return;

      this.addEventListener(`click`, () => {
        const isEnable = promptEnableInfoStore.get()[prompt];
        promptEnableInfoStore.setKey(prompt, !isEnable);
      });

      promptEnableInfoStore.subscribe((info) => {
        const isEnable = info[prompt];
        if (isEnable) {
          this.classList.add(`enable`);
        } else {
          this.classList.remove(`enable`);
        }
      });
    }
  }

  customElements.define(`prompt-button`, PromptButton, { extends: `button` });
</script>

<style>
  button {
    border: 1px solid rgb(var(--text-main));
    color: rgb(var(--text-main));
    font-size: 1rem;
    border-radius: 0.5rem;
    padding: 0.4rem;
    transition-duration: 200ms;
    cursor: pointer;
    background-color: transparent;
    outline: none;
    appearance: none;
  }
  button:hover {
    background-color: rgb(var(--accent-dark));
    transition-duration: 200ms;
  }

  .enable {
    background: rgb(var(--accent));
    border-color: rgb(var(--accent-dark));
  }
</style>
