---
import type { Prompt } from "../libs/prompts-store";

interface Props {
  key: Prompt;
}

const { key } = Astro.props;
---

<button is="prompt-button" data-key={key}>
  {key}
</button>

<script>
  import { type Prompt, promptRecordsStore } from "../libs/prompts-store";

  class PromptButton extends HTMLButtonElement {
    constructor() {
      super();

      const key = this.dataset.key as Prompt;
      if (!key) return;

      this.addEventListener(`click`, () => {
        const all = promptRecordsStore.get();
        const record = all.filter(({ prompt }) => prompt === key)[0];

        record.isEnable = !record.isEnable;
        promptRecordsStore.set([...all]);
      });

      promptRecordsStore.subscribe((all) => {
        const record = all.filter(({ prompt }) => prompt === key)[0];

        if (record.isEnable) {
          this.classList.add(`enable`);
        } else {
          this.classList.remove(`enable`);
        }
      });
    }
  }

  customElements.define(`prompt-button`, PromptButton, { extends: `button` });
</script>

<style>
  button {
    border: 1px solid rgb(var(--text-main));
    color: rgb(var(--text-main));
    font-size: 1rem;
    border-radius: 0.5rem;
    padding: 0.4rem;
    transition-duration: 200ms;
    cursor: pointer;
    background-color: transparent;
    outline: none;
    appearance: none;
  }
  button:hover {
    background-color: rgb(var(--accent-dark));
    transition-duration: 200ms;
  }

  .enable {
    background: rgb(var(--accent));
    border-color: rgb(var(--accent-dark));
  }
</style>
