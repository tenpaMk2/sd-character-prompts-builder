---
export const tabKeys = [`main`, `usage`, `changelog`] as const;
export type TabKeys = (typeof tabKeys)[number];

type LocalName = {
  ja: string;
  en: string;
};

export const tabInfos: { [K in (typeof tabKeys)[number]]: LocalName } = {
  main: {
    ja: `メイン`,
    en: `Main`,
  },
  usage: {
    ja: `使い方`,
    en: `Usage`,
  },
  changelog: {
    ja: `更新履歴`,
    en: `ChangeLog`,
  },
};

interface Props {
  selectedKey: TabKeys;
}

const { selectedKey } = Astro.props;
---

<nav>
  {
    tabKeys.map((key) => (
      <a
        href={key === `main` ? `index.html` : key}
        class:list={[{ selected: key === selectedKey }]}
      >
        <span>{tabInfos[key].ja}</span>
      </a>
    ))
  }
</nav>

<style>
  nav {
    width: 100%;
    display: flex;
    flex-flow: row nowrap;
    justify-content: center;
    gap: 0.4rem;
  }

  a {
    padding: 0rem 0.5rem;
    font-size: 1.4rem;
    display: flex;
    flex-flow: column nowrap;
    color: rgb(var(--text-sub));
  }

  a::after {
    content: "";
    width: 100%;
    height: 4px;
    border-radius: 4px 4px 0px 0px;
  }

  .selected {
    color: rgb(var(--text-main));
    font-weight: bold;
  }

  .selected::after {
    background-color: rgb(var(--accent));
  }
</style>
