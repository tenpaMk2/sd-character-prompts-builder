---
export const tabKeys = [`main`, `usage`, `changelog`, `others`] as const;
export type TabKey = (typeof tabKeys)[number];

export const tabNames: { [K in (typeof tabKeys)[number]]: string } = {
  main: `メイン`,
  usage: `使い方`,
  changelog: `更新履歴`,
  others: `その他`,
};

interface Props {
  selectedKey: TabKey;
}

const { selectedKey } = Astro.props;
---

<nav>
  {
    tabKeys.map((key) => (
      <a
        href={`${import.meta.env.BASE_URL}${key === `main` ? `` : `${key}/`}`}
        class:list={[{ selected: key === selectedKey }]}
      >
        <span>{tabNames[key]}</span>
      </a>
    ))
  }
</nav>

<style>
  nav {
    width: 100%;
    display: flex;
    flex-flow: row nowrap;
    justify-content: center;
    gap: 0.4rem;
  }

  a {
    padding: 0rem 0.5rem;
    font-size: 1.4rem;
    display: flex;
    flex-flow: column nowrap;
    color: rgb(var(--text-sub));
    cursor: pointer;
  }

  a::after {
    content: "";
    width: 100%;
    height: 4px;
    border-radius: 4px 4px 0px 0px;
  }

  .selected {
    color: rgb(var(--text-main));
    font-weight: bold;
  }

  .selected::after {
    background-color: rgb(var(--accent));
  }
</style>
