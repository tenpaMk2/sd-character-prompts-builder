---
import Layout from "../layouts/Layout.astro";
import CategoryArea from "../components/CategoryArea.astro";
import { tabNames, type TabKey } from "../components/Tabs.astro";
import { allCategories, type Category } from "../libs/prompts-store";
import OutputArea from "../components/OutputArea.astro";
import Modal from "../components/Modal.astro";

const tabKey: TabKey = `main`;
const tabName = tabNames[tabKey];
const layoutInfo = {
  tabKey,
  tabName,
};

const names: { [K in Category]: string } = {
  "eyes-color": `目の色`,
  "eyes-shape": `目の形状`,
  "eyebrows-shape": `眉毛`,
  eyelashes: `睫毛`,
  "hair-color": `髪色`,
  "hair-length": `髪の長さ`,
  "hair-style": `髪型`,
  "tied-hair": `髪の結び方`,
  "front-hair": `前髪`,
  sidelocks: `横髪`,
  "top-of-the-head": `頭頂`,
  "hair-misc": `髪: その他`,
  "hair-ornament": `髪飾り`,
  "hair-bow": `髪: 🎀`,
  "hair-ribbon": `髪: 🎗`,
  hairband: `髪: ヘアバンド`,
  misc: `その他`,
  breasts: `胸の大きさ`,
} as const;
---

<Layout {...layoutInfo}>
  <before-unload-script data-prod={import.meta.env.PROD} style="display:none"
  ></before-unload-script>
  {
    allCategories.map((category) => (
      <CategoryArea name={names[category]} category={category} />
    ))
  }
  <OutputArea />
  <Modal />
</Layout>

<script>
  // Enable scripts only production mode.
  class BeforeUnloadScript extends HTMLElement {
    constructor() {
      super();

      const isProduction = this.dataset.prod === ``;
      if (isProduction) {
        window.addEventListener(`beforeunload`, (event: BeforeUnloadEvent) => {
          event.preventDefault();
          event.returnValue = ``;
        });
      }
    }
  }

  customElements.define(`before-unload-script`, BeforeUnloadScript);
</script>
