---
import Layout from "../layouts/Layout.astro";
import CategoryArea from "../components/CategoryArea.astro";
import { tabInfos, type TabKeys } from "../components/Tabs.astro";
import { allCategories, type Category } from "../store";

const tabKey: TabKeys = `main`;
const tabName = tabInfos[tabKey].ja;
const layoutInfo = {
  tabKey,
  tabName,
};

const names: { [K in Category]: string } = {
  eyesColors: `目の色`,
  eyesShapes: `目の形状`,
  eyebrows: `眉毛`,
  eyelashes: `睫毛`,
  hairLengths: `髪の長さ`,
  hairStyles: `髪型`,
};
---

<Layout {...layoutInfo}>
  <before-unload-script data-prod={import.meta.env.PROD} style="display:none"
  ></before-unload-script>
  {
    allCategories.map((category) => (
      <CategoryArea name={names[category]} key={category} />
    ))
  }
  <pre><code id="output-prompt" /></pre>
</Layout>

<script>
  import { promptStates } from "../store";

  promptStates.subscribe((promptStates) => {
    const result = promptStates
      .map(({ prompt, isEnable }) => (isEnable ? `${prompt}, ` : ``))
      .join(``);

    const code = document.querySelector(`#output-prompt`)!;
    code.textContent = result;
  });

  // Enable scripts only production mode.
  class BeforeUnloadScript extends HTMLElement {
    constructor() {
      super();

      const isProduction = this.dataset.prod === ``;
      if (isProduction) {
        window.addEventListener(`beforeunload`, (event: BeforeUnloadEvent) => {
          event.preventDefault();
          event.returnValue = ``;
        });
      }
    }
  }

  customElements.define(`before-unload-script`, BeforeUnloadScript);
</script>

<style>
  div {
    padding: 1em;
    background-color: rgb(100% 100% 100% / 0.05);
    border-radius: 1rem;
    display: flex;
    flex-flow: row wrap;
    justify-content: center;
    gap: 1em;
  }

  pre {
    background-color: rgb(20% 20% 20%);
    padding: 1rem;
    white-space: pre-wrap;
  }
  code {
  }
</style>
