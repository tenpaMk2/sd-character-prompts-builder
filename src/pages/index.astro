---
import Layout from "../layouts/Layout.astro";
import CategoryArea from "../components/CategoryArea.astro";
import { tabNames, type TabKey } from "../components/Tabs.astro";
import { allCategories, type Category } from "../libs/prompts-store";
import OutputArea from "../components/OutputArea.astro";

const tabKey: TabKey = `main`;
const tabName = tabNames[tabKey];
const layoutInfo = {
  tabKey,
  tabName,
};

const names: { [K in Category]: string } = {
  eyesColors: `目の色`,
  eyesShapes: `目の形状`,
  eyebrows: `眉毛`,
  eyelashes: `睫毛`,
  hairColor: `髪色`,
  hairLengths: `髪の長さ`,
  hairStyles: `髪型`,
  tiedHair: `髪の結び方`,
  frontHair: `前髪`,
  sidelocks: `横髪`,
  topOfTheHead: `頭頂`,
  hairMisc: `髪: その他`,
  hairOrnament: `髪飾り`,
  hairBow: `髪: 🎀`,
  hairRibbon: `髪: 🎗`,
  hairband: `髪: ヘアバンド`,
  misc: `その他`,
  breasts: `胸の大きさ`,
} as const;
---

<Layout {...layoutInfo}>
  <before-unload-script data-prod={import.meta.env.PROD} style="display:none"
  ></before-unload-script>
  {
    allCategories.map((category) => (
      <CategoryArea name={names[category]} key={category} />
    ))
  }
  <OutputArea />
</Layout>

<script>
  // Enable scripts only production mode.
  class BeforeUnloadScript extends HTMLElement {
    constructor() {
      super();

      const isProduction = this.dataset.prod === ``;
      if (isProduction) {
        window.addEventListener(`beforeunload`, (event: BeforeUnloadEvent) => {
          event.preventDefault();
          event.returnValue = ``;
        });
      }
    }
  }

  customElements.define(`before-unload-script`, BeforeUnloadScript);
</script>
